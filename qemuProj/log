Added Febrary 1st, 2025:

The initial intent of this project is to make an easy to follow implementation of a top-to-bottom, hardware to user, programmable windows experience.  This is via Qemu, custom PCI device, windows kernel and user-mode drivers.  You can find more info in the more specific directories. 

Using teamviewer for remote desktop, since remote desktop isn't available for windows home. 

Project specific qemu install params (and help) is in the devices folder

TODO:
[x] Get qemu building 
[x] Get win64 image loading/running/accessible via remote desktop
[ ] Add generic qemu PCI device to image
[ ] Establish logging for qemu device
[x] Add basic windows kernel driver
[ ] Attach kernel driver to qemu device
[ ] Communicate kernel driver -> qemu device, via I/O
[x] Add windows user-mode driver
[ ] Connect to and use user-mode driver
[ ] Connect user-mode and kernel driver
[ ] Establish user to device interactions

Other possibilities?
[ ] Python library
[ ] Debugging tools (symbol production, link source)
[ ] VM Infrastructure/management tools
[ ] Linux Driver